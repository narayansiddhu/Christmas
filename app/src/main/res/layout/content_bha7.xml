<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:paddingBottom="@dimen/activity_vertical_margin"
    android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    app:layout_behavior="@string/appbar_scrolling_view_behavior"
    tools:context="com.example.siddharth.christmas.bha7"
    tools:showIn="@layout/activity_bha7">
    <ScrollView
        android:layout_width="match_parent"
        android:layout_height="match_parent">
        <TextView
            android:id="@+id/hello_sid"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="UNIT-I

\n\nSoftware reuse success factors, Reuse driven software engineering as business, Object oriented software engineering, Applications and Component subsystems, Use case components, Object components.

\n\nUNIT-II

\n\nDesign Patters – Introduction. Creational Patterns – Factory, factory method, abstract factory, singleton, builder, prototype.

\n\nUNIT-III

\n\nStructural Patterns – Adapter, bridge, composite, decorator, façade, flyweight, proxy. Behavioral Patterns – Chain of responsibility, command, interpreter.

\n\nUNIT-IV

\n\nBehavioral Patterns – Interartor, mediator, memento, observer, state, strategy, template, visitor. Other design patterns – Whole – part, master – slave, view handler, forwarder – receiver, client dispatcher – server, publisher – subscriber.

\n\nUNIT-V

\n\nArchitectural Patterns – Layers, pipes and filters, black board, broker, model-view controller, presentation – abstraction – control, micro kernel, reflection.

\n\nSuggested Reading:

\n1.Ivar Jacabson, Martin Griss, Patrick Johnson, “Software Reuse: Architecture, Process and Organization for Business Success”,
ACM Press 1997.
\n2.Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides – “ Design Patterns”, Pearson Education, 1995.

\n3.Frank Buschmann etc., - “Pattern Oriented Software Architecture– Volume I”, Wiley 1996.

\n4.James W Cooper, “Java Design Patterns, a tutorial”, Pearson Education, 2000.
"

            android:textAppearance="?android:attr/textAppearanceLarge"
            />
    </ScrollView>
</RelativeLayout>
